pipeline {
    
    agent any
    options {
        skipDefaultCheckout(true)
    }
    environment{
        dockerImage = ""
    }
 
    stages {
        stage('Checkout SCM') {
            steps {
                echo '> Checking out the source control ...'
                checkout scm
            }
        }
        stage('maven build') {
            steps {
                echo '> Building the maven application ...'
                sh 'cd calc_spe  && mvn clean install'
            }  
            post {
                success{
                    sh 'cd calc_spe && mvn site'
                    echo "build successful"
                      publishHTML target: [
                            allowMissing: false,
                            alwaysLinkToLastBuild: false,
                            reportDir: 'calc_spe/target/site',
                            reportFiles: 'surefire-report.html',
                            reportName: 'JUnit Test Report'
                        ]
                }
            }
        }
        stage('Docker build'){
            steps{
                script{
                    dockerImage = docker.build "gurleenk/spe_mini:latest"
                }
            }
        }
         stage('Push image to docker hub'){
            steps{
                script{
                    docker.withRegistry('', 'docker-jenkins'){
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Ansible pull docker image'){
            steps{
                ansiblePlaybook becomeUser: null, colorized: true, installation: 'Ansible', disableHostKeyChecking: true, inventory: 'deploy-docker/inventory', playbook: 'deploy-docker/deploy-image.yml', sudoUser: null
            }
        }
    }
}